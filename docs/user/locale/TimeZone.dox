/*
 * Copyright 2011 Haiku, Inc. All rights reserved.
 * Distributed under the terms of the MIT License.
 *
 * Authors:
 *		Adrien Destugues, pulkomandy@pulkomandy.ath.cx
 *		John Scipione, jscipione@gmail.com
 *		Oliver Tappe, zooey@hirschkaefer.de
 *
 * Corresponds to:
 *		headers/os/locale/TimeZone.h	 rev 42274
 *		src/kits/locale/TimeZone.cpp	 rev 42274
 */


/*!
	\file TimeZone.h
	\ingroup locale
	\ingroup libbe
	\brief Provides the BTimeZone class.
*/


/*!
	\class BTimeZone
	\ingroup locale
	\ingroup libbe
	\brief Provides information about time zones.

	\since Haiku R1
*/


/*!
	\fn BTimeZone::BTimeZone(const char* zoneID, const BLanguage* language)
	\brief Construct a timezone from its \a zoneID and \a language.

	The constructor only allows you to construct a timezone if you already
	know its code. If you don't know the code, you can instead go through the
	BCountry class which can enumerate all timezones in a country, or use the
	BLocaleRoster, which knows the timezone selected by the user.

	\since Haiku R1
*/


/*!
	\fn BTimeZone::BTimeZone(const BTimeZone& other)

	\since Haiku R1
*/


/*!
	\fn BTimeZone& BTimeZone::operator=(const BTimeZone& source)

	\since Haiku R1
*/


/*!
	\fn const BString& BTimeZone::ID() const
	\brief Returns the ID of the time zone.

	\since Haiku R1
*/


/*!
	\fn const BString& BTimeZone::Name() const
	\brief Returns the localized name of the time zone.

	Use this method to display the time zone's name to the user.

	\since Haiku R1
*/


/*!
	\fn const BString& BTimeZone::DaylightSavingName() const
	\brief Returns the name of the daylight savings rules used in this timezone.

	\since Haiku R1
*/


/*!
	\fn const BString& BTimeZone::ShortName() const
	\brief Returns the short name of the timezone, in the user's locale.

	\since Haiku R1
*/


/*!
	\fn const BString& BTimeZone::ShortDaylightSavingName() const
	\brief Returns the short name of the daylight savings rules used in this
	       timezone.

	\since Haiku R1
*/


/*!
	\fn int BTimeZone::OffsetFromGMT() const
	\brief Return the offset from GMT.

	The offset is a number of seconds, positive or negative.

	\since Haiku R1
*/


/*!
	\fn bool BTimeZone::SupportsDaylightSaving() const
	\brief Return true if the time zone has daylight saving rules

	\since Haiku R1
*/


/*!
	\fn status_t BTimeZone::InitCheck() const
	\brief Return \c false if there was an error creating the timezone
	       for instance if you called the constructor or SetTo() with an
	       invalid timezone code.

	\since Haiku R1
*/


/*!
	\fn status_t BTimeZone::SetTo(const char* zoneCode,
		const BLanguage* language = NULL)
	\brief Set the timezone to another code.

	\returns \c false if there was an error (likely due to an invalid
	         timezone code.)

	\since Haiku R1
*/
